stages:
  import:
    cmd: python src/data/import_raw_data.py
    deps:
    - src/data/import_raw_data.py
    outs:
    - data/raw
  split:
    cmd: python src/data/make_dataset.py
    deps:
    - data/raw/raw.csv
    - src/data/make_dataset.py
    outs:
    - data/preprocessed/X_test.csv
    - data/preprocessed/X_train.csv
    - data/preprocessed/y_test.csv
    - data/preprocessed/y_train.csv
  normalize:
    cmd: python src/features/build_features.py
    deps:
    - data/preprocessed
    - src/features/build_features.py
    outs:
    - data/processed/X_test_scaled.csv
    - data/processed/X_train_scaled.csv
  gridsearch:
    cmd: python src/models/search_model.py
    deps:
    - data/processed/X_train_scaled.csv
    - data/preprocessed/y_train.csv
    - src/models/search_model.py
    outs:
    - models/best_model.pkl
  training:
    cmd: python src/models/train_model.py
    deps:
    - models/best_model.pkl
    - data/processed/X_train_scaled.csv
    - data/preprocessed/y_train.csv
    - src/models/train_model.py
    outs:
    - models/trained_model.pkl
  evaluate:
    cmd: python src/models/evaluate_model.py
    deps:
    - models/trained_model.pkl
    - data/processed/X_test_scaled.csv
    - data/preprocessed/y_test.csv
    - src/models/evaluate_model.py
    outs:
    - data/predictions/y_test_pred.csv
    metrics:
    - metrics/scores.json:
        cache: false
